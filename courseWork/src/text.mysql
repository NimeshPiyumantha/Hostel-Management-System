DROP DATABASE IF EXISTS HostelManagement;
CREATE DATABASE IF NOT EXISTS HostelManagement;
SHOW DATABASES;
USE HostelManagement;

DROP TABLE IF EXISTS Student;
CREATE TABLE IF NOT EXISTS Student
(
    student_id VARCHAR(255),
    name       VARCHAR(255),
    address    VARCHAR(255),
    contact_no VARCHAR(255),
    dob        DATE,
    gender     VARCHAR(255),
    CONSTRAINT PRIMARY KEY (student_id)
    );
SHOW TABLES;
DESCRIBE Student;

DROP TABLE IF EXISTS Room;
CREATE TABLE IF NOT EXISTS Room
(
    room_id      VARCHAR(255),
    type         VARCHAR(255),
    monthly_rent double,
    qty          VARCHAR(255),
    CONSTRAINT PRIMARY KEY (room_id)
    );
SHOW TABLES;
DESCRIBE Room;

DROP TABLE IF EXISTS Reserve;
CREATE TABLE IF NOT EXISTS Reserve
(
    res_id      VARCHAR(255),
    student_id VARCHAR(255),
    room_id     VARCHAR(255),
    date        DATE,
    key_money   double,
    CONSTRAINT PRIMARY KEY (res_id, student_id,room_id),
    CONSTRAINT FOREIGN KEY (student_id) REFERENCES Student (student_id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (room_id) REFERENCES Room (room_id) ON DELETE CASCADE ON UPDATE CASCADE

    );
SHOW TABLES;
DESCRIBE Reserve;

INSERT INTO Student
VALUES ('STU-001', 'Nimesh', 'Galle', '071234567', '2002-12-12', 'Male'),
       ('STU-002', 'Nimesh', 'Galle', '071234567', '2002-12-12', 'Male');

INSERT INTO Room
VALUES ('Roo-001', 'Single', 7000, '31'),
       ('Roo-002', 'Double', 10000, '23');

use HostelManagement;
SELECT Reserve.res_id,Reserve.student_id,Reserve.room_id,Room.monthly_rent,Reserve.date,Reserve.key_money,(room.monthly_rent-Reserve.key_money) FROM Room INNER JOIN Reserve ON Room.room_id = Reserve.room_id order by res_id;


SELECT res_id FROM Reserve WHERE res_id;
/*SELECT OrderDetail.ItemCode, Item.description, Item.packSize, Item.qtyOnHand, Item.unitPrice, sum(OrderQty),sum(total)FROM Item INNER JOIN OrderDetail on Item.ItemCode = OrderDetail.ItemCode GROUP BY ItemCode ORDER BY sum(OrderQty) DESC limit 1;
*/

